{% extends 'DashboardBundle:Common:backend2.html.twig' %}

{% block breadcrumb %}
  <li>
    <a href="{{ path('contactlist_index') }}">Contact List</a>
    <i class="mdi-navigation-chevron-right"></i>
  </li>
  <li><a href="#">Edit</a></li>
{% endblock breadcrumb %}

{% block content %}
  <style>

    .avatar-right{
      padding-left: 90px !important;
    }

    .primary-content{
      position: absolute;
      top: 10px !important;
      left: 15px !important;
      right: 100% !important;
    }

    .secundary-content-center{
      top: 10px !important;
    }

    .collection .collection-item.avatar {
      min-height: 40px;
    }

    .collection .collection-item.avatar-left {
      padding-left: 45px !important;
    }

    .circle-status-bootom{
      width: 15px !important;
      height: 15px !important;
      position: absolute !important;
      overflow: hidden!important;
      display: inline-block!important;
      vertical-align: middle!important;
    }

    .circle-status{
      width: 15px !important;
      height: 15px !important;
      position: absolute !important;
      overflow: hidden!important;
      display: inline-block!important;
      vertical-align: middle!important;
      top: 12px;
    }

    .circle-status.red {
      left: 190px;
    }

    .circle-status.green {
      left: 15px;
    }

    .arrow-switch-legent{
      color: #424242;
      font-size: 20px;
      background-color: #F9F9F9;
      border-radius: 4px;
    }

    .arrow-switch-legent:hover{
      background-color: #9E9E9E;
    }

  </style>
  <div class="card card-data-grid">
    <div class="title">
      <h5> Edit Contact List</h5>
      <div class="btn-group right">
        <a href="{{ path('contactlist_index') }}" class="btn btn-small waves-dark waves-effect"><i
              class="mdi mdi-hardware-keyboard-arrow-left left"></i>Back</a>
        <a id="save_action" class="btn btn-small waves-dark waves-effect"> <i class="mdi mdi-content-save left"></i>
          Save</a>
      </div>
    </div>
    <div class="content">

      <form data-parsley-validate id="formSubmit" class="form-horizontal" action="" method="post" {{ form_enctype(form) }}>
        <div class="row" style="padding-left: 20px;padding-right: 3%;margin-top: 1rem;">
          <div class="row" style="margin-top: 0rem;">
            <div class="col m6" style="padding-bottom: 15px;">
              <div class="input-field">
                {{ form_widget(form.name, {'attr': {'required':'required'}}) }}
                <label for="property_lease_term" class="">Name</label>
              </div>
            </div>
          </div>
        </div>
        {{ form_rest(form) }}
      </form>
    </div>
  </div>

<div class="card">
  <div class="title">
    <h5> Manage contacts </h5>
    <div class="btn-group right">
      <a class="btn btn-small waves-dark waves-effect modal-trigger"  href="#modalAddContat"> <i class="mdi mdi-social-group-add left"></i>Add contact</a>
      <a class="btn btn-small waves-dark waves-effect modal-trigger"  href="#modalImportContact"> <i class="mdi mdi-communication-import-export left"></i>Import contact</a>
    </div>
  </div>

  {% include 'DashboardBundle:ContactList:Partials/_modal-add-contact.html.twig' %}
  {% include 'DashboardBundle:ContactList:Partials/_modal-import-contact.html.twig' %}

  <div class="content" style="padding-top: 5px">
    <div class="row" style="margin-top: 5px;">
      <div class="col m6" style="padding-bottom: 0px;">
        <span style="font-size: 18px">All contacts:</span>
        {{ grid(grid, 'DashboardBundle:Grid:gridTemplateContactsAjax.html.twig') }}
      </div>
      <div class="col m6" style="padding-bottom: 0px;">
        <span style="font-size: 18px">Contacts in this list:</span>
        {{ grid(grid2, 'DashboardBundle:Grid:gridTemplateMyContactsAjax.html.twig') }}
      </div>
    </div>

    <div class="row">
      <div class="col m2" style="padding-right: 0px">
        <i class="green circle circle-status-bootom"> <span></span></i> <b style="margin-left: 30px;"> Enabled contact</b>
      </div>
      <div class="col m2">
        <i class="red circle circle-status-bootom"> <span></span></i> <b style="margin-left: 30px;"> Disabled contact</b>
      </div>
      <div class="col m4">
        <div style="margin-top: -6px;">
          <i class="mdi mdi-hardware-keyboard-arrow-right arrow-switch-legent"></i>
          <i class="mdi mdi-hardware-keyboard-arrow-left arrow-switch-legent"></i>
          <b> Switch contact </b>
        </div>
      </div>
    </div>
  </div>
</div>
  <script src="{{ asset('bundles/dashboard/material/js/parsley.min.js') }}" type="text/javascript"></script>
  <script src="{{ asset('bundles/common/js/jquery/plugin/jquery.form.js') }}" type="text/javascript"></script>
  <script src="{{ asset('bundles/common/js/papaparse.js') }}" type="text/javascript"></script>
  <script src="{{ asset('bundles/common/js/application.js') }}" type="text/javascript"></script>
  <script>
    $(document).ready(function () {
      $('#contact_email').attr('type','email');

      $('#formContact').bind('submit', function(e) {
        e.preventDefault(); // <-- important
        $(this).ajaxSubmit(function(data){
          data = JSON.parse(data);
          Materialize.toast(data.message, 4000);
          if(data.code == 200){
            grid_SECOND_updateGrid(event);
            $('#contact_first_name').val('');
            $('#contact_last_name').val('');
            $('#contact_email').val('');
            $('#modalAddContat').closeModal();
          }
        });
      });

      $('#save_action').click(function () {
        App.submit('formSubmit', '{{ path('contactlist_update', { 'id': entity.id }) }}')
      });

      $('#button_addcontac').click(function () {
        App.submit('formContact', '{{ path('contactlist_addcontact2contactlist') }}')
      });

      $('li.collection-item').click(function () {
        $('li.collection-item').removeClass('active');
        $(this).addClass('active');
      });

    });

      function handleFileSelect() {
        if (!window.File || !window.FileReader || !window.FileList || !window.Blob) {
          alert('The File APIs are not fully supported in this browser.');
          return;
        }
        input = document.getElementById('fileinput');
        if (!input) alert("Um, couldn't find the fileinput element.");
        else if (!input.files) alert("This browser doesn't seem to support the `files` property of file inputs.");
        else if (!input.files[0]) alert("Please select a file before clicking 'Load'");
        else {
          file = input.files[0];
          Papa.parse(file, {
            config: {
              header: true
            },
            before: function(file, inputElem){
              console.log('before!');
            },
            error: function(err, file, inputElem, reason){
              console.log('error!');
            },
            complete: function(results) {
              var contacts = results.data;
              var providerType = $('li.collection-item.active').data('email');
              var dataArray = Array();
              var requestArray = Array();
              for(var i = 0;i < contacts.length;i++){
                value = contacts[i];
                switch(providerType){
                  case 'topproducer':
                    dataEmail = value[17];
                    dataName = value[4];
                    dataLastName = value[5];
                    break;
                  case 'mailchimp':
                    dataEmail = value[0];
                    dataName = value[1];
                    dataLastName = value[2];
                    break;
                  case 'outlook':
                    dataEmail = value[46];
                    dataName = value[1];
                    dataLastName = value[3];
                    break;
                  case 'constantcontact':

                    if(i!=0){
                      if(value[2]!=undefined){
                        dataEmail     = value[2];
                        dataName      = value[0];
                        dataLastName  = value[1];
                        middleName    = '';
                        var itemContact = {firstName:dataName,lastName:dataLastName,email:dataEmail,middleName:middleName};
                        dataArray.push(itemContact);
                      }
                    }

                    break;
                  case 'gmail':
                    if(i!=0){
                      if(value[14]!=undefined){
                        dataEmail       = value[14];
                        dataName        = value[0];
                        middleName      = value[1];
                        dataLastName    = value[2];
                        var itemContact = {firstName:dataName,lastName:dataLastName,email:dataEmail,middleName:middleName};
                        dataArray.push(itemContact);
                      }
                    }
                    break;
                  default:
                    return false;
                    break;
                }
              }

              if(dataArray.length == 0){
                Materialize.toast('Not has contact in the file', 4000);
                return false;
              }

              $.ajax({
                type: "GET",
                url: '{{ path('bulk_addcontact2contactlist') }}',
                data: {requestArray:{provider:providerType,data:dataArray}},
                success: function(data) {
                  data = JSON.parse(data);
                  Materialize.toast(data.message, 4000);
                  if(data.code == 200){
                    grid_SECOND_updateGrid(event);
                    $('#modalImportContact').closeModal();
                    $('#importcontact').addClass('disabled')
                  }else{
                  }
                },
                dataType: 'html'
              });
            }
          });
        }
      }
  </script>
{% endblock content %}
